{
    "inverted_idx": {
        "base64 encode": {
            "ground_truths": [
                "base64.b64encode",
                "base64.encodebytes"
            ],
            "ground_truths_idx": [
                129,
                148
            ],
            "query": "base64 encode",
            "responses": [
                "base64.b16encode",
                "base64.b32encode",
                "base64.standard_b64encode",
                "base64.standard_b64decode",
                "base64.decodebytes",
                "base64.urlsafe_b64encode",
                "stat.ST_MODE",
                "stat.ST_INO",
                "email.encoders.encode_base64",
                "base64.urlsafe_b64decode"
            ],
            "responses_idx": [
                139,
                135,
                131,
                132,
                146,
                133,
                4045,
                4046,
                1311,
                134
            ]
        },
        "check file exists": {
            "ground_truths": [
                "os.path.exists",
                "os.path.isfile"
            ],
            "ground_truths_idx": [
                3390,
                3399
            ],
            "query": "check file exists",
            "responses": [
                "errno.EEXIST",
                "errno.ENFILE",
                "site.PREFIXES",
                "tarfile.REGTYPE",
                "tarfile.AREGTYPE",
                "tarfile.CONTTYPE",
                "io.IOBase.fileno",
                "tarfile.LNKTYPE",
                "profile.Profile.run",
                "faulthandler.is_enabled"
            ],
            "responses_idx": [
                1533,
                1539,
                3729,
                4457,
                4458,
                4465,
                2129,
                4459,
                3508,
                1674
            ]
        },
        "create temporary file": {
            "ground_truths": [
                "tempfile.TemporaryFile",
                "tempfile.NamedTemporaryFile",
                "tempfile.mkstemp",
                "tempfile.SpooledTemporaryFile"
            ],
            "ground_truths_idx": [
                4477,
                4478,
                4479,
                4473
            ],
            "query": "create temporary file",
            "responses": [
                "test.support.os_helper.TESTFN",
                "errno.ENFILE",
                "tarfile.TarInfo",
                "tkinter.tix.Tree",
                "ctypes.cdll",
                "tarfile.REGTYPE",
                "tarfile.AREGTYPE",
                "tarfile.CONTTYPE",
                "tarfile.LNKTYPE",
                "cmath.sin"
            ],
            "responses_idx": [
                4641,
                1539,
                4450,
                4776,
                661,
                4457,
                4458,
                4465,
                4459,
                313
            ]
        },
        "create zip archive": {
            "ground_truths": [
                "zipfile.ZipFile",
                "shutil.make_archive"
            ],
            "ground_truths_idx": [
                5744,
                3663
            ],
            "query": "create zip archive",
            "responses": [
                "zipapp.get_interpreter",
                "cmath.sin",
                "cmath.rect",
                "cmath.sinh",
                "cmath.polar",
                "cmath.asin",
                "cmath.tan",
                "cmath.cos",
                "test.support.script_helper.make_zip_script",
                "cmath.atan"
            ],
            "responses_idx": [
                5743,
                313,
                304,
                319,
                303,
                310,
                314,
                312,
                4577,
                311
            ]
        },
        "csv reading": {
            "ground_truths": [
                "csv.reader",
                "csv.DictReader"
            ],
            "ground_truths_idx": [
                561,
                552
            ],
            "query": "csv reading",
            "responses": [
                "csv.list_dialects",
                "csv.QUOTE_ALL",
                "csv.excel",
                "csv.excel_tab",
                "cmath.rect",
                "ast.Set",
                "stat.S_ISUID",
                "os.fchown",
                "ast.Break",
                "time.ctime"
            ],
            "responses_idx": [
                566,
                568,
                555,
                556,
                304,
                44,
                4065,
                3049,
                81,
                4708
            ]
        },
        "datetime difference": {
            "ground_truths": [
                "datetime.timedelta",
                "datetime.datetime"
            ],
            "ground_truths_idx": [
                1007,
                1006
            ],
            "query": "datetime difference",
            "responses": [
                "cmath.atan",
                "math.atan",
                "tkinter.tix.Meter",
                "math.acos",
                "cmath.rect",
                "math.tau",
                "math.log",
                "curses.panel.top_panel",
                "dis.Bytecode.dis",
                "test.support.PGO"
            ],
            "responses_idx": [
                311,
                2646,
                4762,
                2644,
                304,
                2667,
                2638,
                724,
                1206,
                4621
            ]
        },
        "deep copy object": {
            "ground_truths": [
                "copy.deepcopy"
            ],
            "ground_truths_idx": [
                549
            ],
            "query": "deep copy object",
            "responses": [
                "copy.deepcopy",
                "copy.copy",
                "token.OP",
                "mmap.mmap.size",
                "mmap.mmap.move",
                "mmap.mmap.tell",
                "token.DOT",
                "mmap.mmap.resize",
                "mmap.mmap.close",
                "unittest.mock.ANY"
            ],
            "responses_idx": [
                549,
                548,
                4916,
                2702,
                2695,
                2703,
                4884,
                2699,
                2691,
                5362
            ]
        },
        "generate random number": {
            "ground_truths": [
                "random.random",
                "random.randint",
                "random.uniform",
                "random.randrange"
            ],
            "ground_truths_idx": [
                3556,
                3549,
                3557,
                3548
            ],
            "query": "generate random number",
            "responses": [
                "random.Random.random",
                "random.Random.getstate",
                "random.Random.setstate",
                "random.Random.getrandbits",
                "random.Random.seed",
                "random.random",
                "uuid.uuid4",
                "random.randint",
                "random.randbytes",
                "random.choice"
            ],
            "responses_idx": [
                3541,
                3539,
                3540,
                3542,
                3538,
                3556,
                5432,
                3549,
                3547,
                3551
            ]
        },
        "generate uuid": {
            "ground_truths": [
                "uuid.uuid4",
                "uuid.uuid1",
                "uuid.uuid5"
            ],
            "ground_truths_idx": [
                5432,
                5430,
                5433
            ],
            "query": "generate uuid",
            "responses": [
                "uuid.uuid4",
                "uuid.RFC_4122",
                "uuid.RESERVED_MICROSOFT",
                "uuid.RESERVED_FUTURE",
                "uuid.RESERVED_NCS",
                "uuid.uuid3",
                "uuid.uuid5",
                "uuid.SafeUUID",
                "uuid.NAMESPACE_OID",
                "uuid.NAMESPACE_URL"
            ],
            "responses_idx": [
                5432,
                5439,
                5440,
                5441,
                5438,
                5431,
                5433,
                5427,
                5436,
                5435
            ]
        },
        "get environment variables": {
            "ground_truths": [
                "os.environ",
                "os.getenv"
            ],
            "ground_truths_idx": [
                3203,
                3002
            ],
            "query": "get environment variables",
            "responses": [
                "venv.EnvBuilder.setup_python",
                "array.array.reverse",
                "stat.S_IRUSR",
                "stat.S_IRGRP",
                "stat.S_IROTH",
                "heapq.heappush",
                "array.array.tolist",
                "mmap.mmap.tell",
                "sys.base_exec_prefix",
                "sys.base_prefix"
            ],
            "responses_idx": [
                5446,
                29,
                4069,
                4073,
                4077,
                1857,
                32,
                2703,
                4315,
                4316
            ]
        },
        "json pretty print": {
            "ground_truths": [
                "json.dumps",
                "pprint.pprint"
            ],
            "ground_truths_idx": [
                2236,
                3497
            ],
            "query": "json pretty print",
            "responses": [
                "json.JSONEncoder.encode",
                "json.JSONDecoder.decode",
                "json.JSONDecoder.raw_decode",
                "json.JSONEncoder.iterencode",
                "cmath.sin",
                "multiprocessing.pool.Pool.join",
                "json.JSONEncoder.default",
                "math.sin",
                "cmath.rect",
                "cmath.asin"
            ],
            "responses_idx": [
                2233,
                2229,
                2230,
                2234,
                313,
                2829,
                2232,
                2651,
                304,
                310
            ]
        },
        "list permutations": {
            "ground_truths": [
                "itertools.permutations"
            ],
            "ground_truths_idx": [
                2221
            ],
            "query": "list permutations",
            "responses": [
                "ast.Pass",
                "stat.S_ISUID",
                "site.PREFIXES",
                "ast.Set",
                "tkinter.tix.TList",
                "ast.Compare",
                "uuid.uuid4",
                "ast.Import",
                "ast.List",
                "stat.S_IFIFO"
            ],
            "responses_idx": [
                73,
                4065,
                3729,
                44,
                4777,
                56,
                5432,
                75,
                43,
                4061
            ]
        },
        "logarithm computation": {
            "ground_truths": [
                "math.log",
                "math.log10",
                "math.log2",
                "cmath.log"
            ],
            "ground_truths_idx": [
                2638,
                2641,
                2640,
                306
            ],
            "query": "logarithm computation",
            "responses": [
                "math.log",
                "cmath.log",
                "decimal.Context.log10",
                "cmath.log10",
                "decimal.Context.ln",
                "venv.EnvBuilder.setup_python",
                "site.USER_SITE",
                "collections.Counter.total",
                "platform.python_implementation",
                "math.log10"
            ],
            "responses_idx": [
                2638,
                306,
                1117,
                307,
                1116,
                5446,
                3731,
                407,
                3470,
                2641
            ]
        },
        "measure execution time": {
            "ground_truths": [
                "time.time",
                "time.perf_counter",
                "timeit.timeit"
            ],
            "ground_truths_idx": [
                4722,
                4715,
                4747
            ],
            "query": "measure execution time",
            "responses": [
                "errno.E2BIG",
                "turtle.onrelease",
                "cmath.sin",
                "errno.ELNRNG",
                "errno.EMSGSIZE",
                "token.OP",
                "turtle.pu",
                "operator.neg",
                "turtle.ontimer",
                "turtle.pd"
            ],
            "responses_idx": [
                1523,
                5075,
                313,
                1564,
                1606,
                4916,
                5045,
                2921,
                5100,
                5042
            ]
        },
        "memory usage": {
            "ground_truths": [
                "tracemalloc.start",
                "tracemalloc.get_traced_memory",
                "gc.get_stats",
                "sys.getsizeof"
            ],
            "ground_truths_idx": [
                4996,
                4992,
                1764,
                4288
            ],
            "query": "memory usage",
            "responses": [
                "tracemalloc.get_tracemalloc_memory",
                "tracemalloc.Trace",
                "errno.ENOMEM",
                "tracemalloc.clear_traces",
                "site.USER_SITE",
                "tracemalloc.stop",
                "tracemalloc.Statistic",
                "inspect.currentframe",
                "multiprocessing.shared_memory.SharedMemory",
                "tracemalloc.DomainFilter"
            ],
            "responses_idx": [
                4994,
                4986,
                1528,
                4989,
                3731,
                4997,
                4984,
                2108,
                2866,
                4975
            ]
        },
        "open gzip file": {
            "ground_truths": [
                "gzip.open"
            ],
            "ground_truths_idx": [
                1824
            ],
            "query": "open gzip file",
            "responses": [
                "mmap.mmap.tell",
                "uuid.NAMESPACE_OID",
                "stat.S_ISUID",
                "mmap.mmap.size",
                "heapq.heappush",
                "uuid.uuid4",
                "os.fchown",
                "stat.UF_COMPRESSED",
                "heapq.heappop",
                "errno.EIO"
            ],
            "responses_idx": [
                2703,
                5436,
                4065,
                2702,
                1857,
                5432,
                3049,
                4089,
                1858,
                1521
            ]
        },
        "parse command line arguments": {
            "ground_truths": [
                "argparse.ArgumentParser",
                "sys.argv"
            ],
            "ground_truths_idx": [
                7,
                4314
            ],
            "query": "parse command line arguments",
            "responses": [
                "curses.panel.bottom_panel",
                "curses.panel.top_panel",
                "ast.arguments",
                "fileinput.lineno",
                "curses.panel.new_panel",
                "wave.Wave_read.getmark",
                "wave.Wave_read.close",
                "wave.Wave_read.getmarkers",
                "tarfile.GNUTYPE_SPARSE",
                "fileinput.filelineno"
            ],
            "responses_idx": [
                722,
                724,
                102,
                1691,
                723,
                5472,
                5461,
                5471,
                4468,
                1692
            ]
        },
        "read json file": {
            "ground_truths": [
                "json.load",
                "json.loads"
            ],
            "ground_truths_idx": [
                2237,
                2238
            ],
            "query": "read json file",
            "responses": [
                "json.JSONEncoder.encode",
                "json.JSONDecoder.decode",
                "json.JSONDecoder.raw_decode",
                "json.JSONEncoder.iterencode",
                "io.TextIOBase.read",
                "os.fchown",
                "errno.EIO",
                "io.IOBase.readable",
                "profile.Profile.run",
                "io.BufferedReader.read"
            ],
            "responses_idx": [
                2233,
                2229,
                2230,
                2234,
                2171,
                3049,
                1521,
                2132,
                3508,
                2162
            ]
        },
        "regex match": {
            "ground_truths": [
                "re.match",
                "re.search",
                "re.fullmatch",
                "re.compile"
            ],
            "ground_truths_idx": [
                3573,
                3572,
                3574,
                3571
            ],
            "query": "regex match",
            "responses": [
                "re.Match",
                "patch.stopall",
                "re.match",
                "fnmatch.filter",
                "math.tanh",
                "fnmatch.translate",
                "ast.Match",
                "urllib.request.HTTPPasswordMgrWithDefaultRealm",
                "unittest.TestCase.assertRegex",
                "unittest.TestCase.assertWarnsRegex"
            ],
            "responses_idx": [
                3570,
                5355,
                3573,
                1700,
                2660,
                1701,
                87,
                5394,
                5253,
                5248
            ]
        },
        "serialize object": {
            "ground_truths": [
                "pickle.dump",
                "pickle.dumps",
                "json.dump",
                "json.dumps",
                "marshal.dump"
            ],
            "ground_truths_idx": [
                3443,
                3444,
                2235,
                2236,
                2605
            ],
            "query": "serialize object",
            "responses": [
                "inspect.ismethod",
                "ctypes.py_object",
                "socket.SocketType",
                "sqlite3.Connection.serialize",
                "venv.EnvBuilder.setup_python",
                "site.USER_SITE",
                "inspect.isclass",
                "inspect.isfunction",
                "platform.python_implementation",
                "pprint.isrecursive"
            ],
            "responses_idx": [
                2067,
                619,
                3860,
                3911,
                5446,
                3731,
                2066,
                2068,
                3470,
                3500
            ]
        },
        "sin computation": {
            "ground_truths": [
                "math.sin",
                "cmath.sin"
            ],
            "ground_truths_idx": [
                2651,
                313
            ],
            "query": "sin computation",
            "responses": [
                "cmath.sin",
                "math.sinh",
                "cmath.sinh",
                "site.PREFIXES",
                "math.sin",
                "site.USER_SITE",
                "stat.ST_INO",
                "math.asinh",
                "math.asin",
                "stat.S_ISUID"
            ],
            "responses_idx": [
                313,
                2659,
                319,
                3729,
                2651,
                3731,
                4046,
                2656,
                2645,
                4065
            ]
        },
        "suppress traceback": {
            "ground_truths": [
                "contextlib.suppress",
                "warnings.filterwarnings",
                "sys.excepthook",
                "logging.exception",
                "contextlib.redirect_stdout",
                "contextlib.redirect_stderr",
                "warnings.catch_warnings",
                "contextlib.nullcontext"
            ],
            "ground_truths_idx": [
                531,
                5457,
                4274,
                2393,
                532,
                533,
                5452,
                530
            ],
            "query": "suppress traceback",
            "responses": [
                "traceback.TracebackException.format_exception_only",
                "inspect.istraceback",
                "contextlib.suppress",
                "traceback.format_tb",
                "traceback.TracebackException.from_exception",
                "pdb.post_mortem",
                "traceback.format_stack",
                "traceback.clear_frames",
                "traceback.TracebackException.print",
                "traceback.walk_tb"
            ],
            "responses_idx": [
                4951,
                2077,
                531,
                4970,
                4948,
                3430,
                4971,
                4972,
                4949,
                4974
            ]
        },
        "time sleep": {
            "ground_truths": [
                "time.sleep"
            ],
            "ground_truths_idx": [
                4719
            ],
            "query": "time sleep",
            "responses": [
                "ast.Pass",
                "curses.panel.bottom_panel",
                "curses.panel.top_panel",
                "ast.Raise",
                "curses.delay_output",
                "errno.EBUSY",
                "re.purge",
                "wave.Wave_read.close",
                "wave.Wave_read.getmark",
                "wave.Wave_read.getmarkers"
            ],
            "responses_idx": [
                73,
                722,
                724,
                70,
                739,
                1532,
                3581,
                5461,
                5472,
                5471
            ]
        },
        "url encode string": {
            "ground_truths": [
                "urllib.parse.quote",
                "urllib.parse.urlencode"
            ],
            "ground_truths_idx": [
                5379,
                5385
            ],
            "query": "url encode string",
            "responses": [
                "urllib.parse.unwrap",
                "uuid.NAMESPACE_URL",
                "string.digits",
                "string.hexdigits",
                "string.octdigits",
                "turtle.pd",
                "turtle.pu",
                "urllib.parse.urljoin",
                "urllib.robotparser.RobotFileParser.set_url",
                "cmath.rect"
            ],
            "responses_idx": [
                5378,
                5435,
                4161,
                4162,
                4163,
                5042,
                5045,
                5376,
                5418,
                304
            ]
        }
    },
    "llm_tree_idx": {
        "base64 encode": {
            "ground_truths": [
                "base64.b64encode",
                "base64.encodebytes"
            ],
            "ground_truths_idx": [
                129,
                148
            ],
            "query": "base64 encode",
            "responses": [
                "base64.standard_b64encode",
                "base64.b32encode",
                "base64.encodebytes",
                "base64.b16encode",
                "base64.standard_b64decode",
                "base64.urlsafe_b64encode",
                "base64.urlsafe_b64decode",
                "base64.encode",
                "base64.b85decode",
                "base64.b85encode"
            ],
            "responses_idx": [
                131,
                135,
                148,
                139,
                132,
                133,
                134,
                147,
                144,
                143
            ]
        },
        "check file exists": {
            "ground_truths": [
                "os.path.exists",
                "os.path.isfile"
            ],
            "ground_truths_idx": [
                3390,
                3399
            ],
            "query": "check file exists",
            "responses": [
                "inspect.getfile",
                "os.path.isfile",
                "test.support.os_helper.create_empty_file",
                "stat.S_IFREG",
                "zipfile.is_zipfile",
                "test.support.findfile",
                "tempfile.gettempprefix",
                "fnmatch.fnmatch",
                "os.path.exists",
                "fileinput.isfirstline"
            ],
            "responses_idx": [
                2090,
                3399,
                4590,
                4057,
                5749,
                4506,
                4483,
                1698,
                3390,
                1693
            ]
        },
        "create temporary file": {
            "ground_truths": [
                "tempfile.TemporaryFile",
                "tempfile.NamedTemporaryFile",
                "tempfile.mkstemp",
                "tempfile.SpooledTemporaryFile"
            ],
            "ground_truths_idx": [
                4477,
                4478,
                4479,
                4473
            ],
            "query": "create temporary file",
            "responses": [
                "tempfile.gettempprefix",
                "tempfile.NamedTemporaryFile",
                "tempfile.TemporaryFile",
                "tempfile.TemporaryDirectory.cleanup",
                "tempfile.SpooledTemporaryFile",
                "tempfile.TemporaryDirectory",
                "tempfile.mkstemp",
                "tempfile.tempdir",
                "tempfile.mkdtemp",
                "test.support.os_helper.create_empty_file"
            ],
            "responses_idx": [
                4483,
                4478,
                4477,
                4476,
                4473,
                4475,
                4479,
                4485,
                4480,
                4590
            ]
        },
        "create zip archive": {
            "ground_truths": [
                "zipfile.ZipFile",
                "shutil.make_archive"
            ],
            "ground_truths_idx": [
                5744,
                3663
            ],
            "query": "create zip archive",
            "responses": [
                "zipfile.ZipFile",
                "zipfile.ZIP_STORED",
                "zipapp.create_archive",
                "zipfile.ZipInfo",
                "zipfile.Path",
                "zipfile.PyZipFile",
                "zipfile.PyZipFile.writepy",
                "test.support.script_helper.make_zip_script",
                "zipapp.get_interpreter",
                "shutil.unpack_archive"
            ],
            "responses_idx": [
                5744,
                5750,
                5742,
                5747,
                5745,
                5746,
                5748,
                4577,
                5743,
                3667
            ]
        },
        "csv reading": {
            "ground_truths": [
                "csv.reader",
                "csv.DictReader"
            ],
            "ground_truths_idx": [
                561,
                552
            ],
            "query": "csv reading",
            "responses": [
                "csv.reader",
                "csv.unix_dialect",
                "csv.Sniffer",
                "csv.Dialect",
                "csv.excel",
                "csv.writer",
                "csv.QUOTE_ALL",
                "csv.DictReader",
                "csv.Sniffer.has_header",
                "csv.list_dialects"
            ],
            "responses_idx": [
                561,
                557,
                558,
                554,
                555,
                562,
                568,
                552,
                560,
                566
            ]
        },
        "datetime difference": {
            "ground_truths": [
                "datetime.timedelta",
                "datetime.datetime"
            ],
            "ground_truths_idx": [
                1007,
                1006
            ],
            "query": "datetime difference",
            "responses": [
                "calendar.leapdays",
                "calendar.Calendar.itermonthdays2",
                "calendar.Calendar.itermonthdays",
                "datetime.date",
                "mailbox.MaildirMessage.get_date",
                "decimal.Context.subtract",
                "locale.ABDAY_2",
                "datetime.timezone",
                "calendar.Calendar.itermonthdays3",
                "calendar.Calendar.itermonthdays4"
            ],
            "responses_idx": [
                269,
                238,
                237,
                1004,
                2574,
                1145,
                2263,
                1009,
                239,
                240
            ]
        },
        "deep copy object": {
            "ground_truths": [
                "copy.deepcopy"
            ],
            "ground_truths_idx": [
                549
            ],
            "query": "deep copy object",
            "responses": [
                "copy.deepcopy",
                "copy.copy",
                "copyreg.constructor",
                "contextvars.Context.copy",
                "dataclasses.astuple",
                "dataclasses.asdict",
                "collections.deque.copy",
                "copyreg.pickle",
                "contextvars.copy_context",
                "shutil.copyfileobj"
            ],
            "responses_idx": [
                549,
                548,
                550,
                542,
                997,
                996,
                414,
                551,
                547,
                3649
            ]
        },
        "generate random number": {
            "ground_truths": [
                "random.random",
                "random.randint",
                "random.uniform",
                "random.randrange"
            ],
            "ground_truths_idx": [
                3556,
                3549,
                3557,
                3548
            ],
            "query": "generate random number",
            "responses": [
                "random.getrandbits",
                "random.random",
                "random.SystemRandom",
                "random.randint",
                "random.randrange",
                "random.shuffle",
                "secrets.randbelow",
                "ssl.RAND_bytes",
                "random.randbytes",
                "random.seed"
            ],
            "responses_idx": [
                3550,
                3556,
                3543,
                3549,
                3548,
                3553,
                3609,
                3979,
                3547,
                3544
            ]
        },
        "generate uuid": {
            "ground_truths": [
                "uuid.uuid4",
                "uuid.uuid1",
                "uuid.uuid5"
            ],
            "ground_truths_idx": [
                5432,
                5430,
                5433
            ],
            "query": "generate uuid",
            "responses": [
                "uuid.uuid4",
                "uuid.uuid5",
                "uuid.SafeUUID",
                "uuid.uuid3",
                "uuid.UUID",
                "uuid.uuid1",
                "uuid.NAMESPACE_URL",
                "os.setresuid",
                "uuid.NAMESPACE_OID",
                "os.setreuid"
            ],
            "responses_idx": [
                5432,
                5433,
                5427,
                5431,
                5428,
                5430,
                5435,
                3031,
                5436,
                3032
            ]
        },
        "get environment variables": {
            "ground_truths": [
                "os.environ",
                "os.getenv"
            ],
            "ground_truths_idx": [
                3203,
                3002
            ],
            "query": "get environment variables",
            "responses": [
                "test.support.script_helper.interpreter_requires_environment",
                "sys.path",
                "importlib.abc.Traversable.read_text",
                "os.get_exec_path",
                "test.support.script_helper.assert_python_ok",
                "inspect.getclosurevars",
                "os.getenv",
                "wsgiref.handlers.read_environ",
                "importlib.abc.Traversable.open",
                "importlib.resources.abc.Traversable.read_text"
            ],
            "responses_idx": [
                4570,
                4392,
                1963,
                3004,
                4572,
                2102,
                3002,
                5548,
                1961,
                2047
            ]
        },
        "json pretty print": {
            "ground_truths": [
                "json.dumps",
                "pprint.pprint"
            ],
            "ground_truths_idx": [
                2236,
                3497
            ],
            "query": "json pretty print",
            "responses": [
                "json.JSONEncoder.encode",
                "json.JSONDecoder.raw_decode",
                "json.JSONDecoder.decode",
                "json.dump",
                "json.loads",
                "json.dumps",
                "json.JSONEncoder",
                "json.load",
                "string.printable",
                "json.JSONEncoder.iterencode"
            ],
            "responses_idx": [
                2233,
                2230,
                2229,
                2235,
                2238,
                2236,
                2231,
                2237,
                4165,
                2234
            ]
        },
        "list permutations": {
            "ground_truths": [
                "itertools.permutations"
            ],
            "ground_truths_idx": [
                2221
            ],
            "query": "list permutations",
            "responses": [
                "itertools.permutations",
                "random.shuffle",
                "itertools.combinations",
                "itertools.combinations_with_replacement",
                "math.perm",
                "itertools.product",
                "itertools.pairwise",
                "math.comb",
                "itertools.count",
                "random.sample"
            ],
            "responses_idx": [
                2221,
                3553,
                2211,
                2212,
                2628,
                2222,
                2220,
                2611,
                2214,
                3554
            ]
        },
        "logarithm computation": {
            "ground_truths": [
                "math.log",
                "math.log10",
                "math.log2",
                "cmath.log"
            ],
            "ground_truths_idx": [
                2638,
                2641,
                2640,
                306
            ],
            "query": "logarithm computation",
            "responses": [
                "math.log",
                "cmath.log10",
                "math.log1p",
                "cmath.log",
                "cmath.exp",
                "math.log10",
                "math.log2",
                "math.exp",
                "decimal.Context.log10",
                "decimal.Decimal.log10"
            ],
            "responses_idx": [
                2638,
                307,
                2639,
                306,
                305,
                2641,
                2640,
                2635,
                1117,
                1055
            ]
        },
        "measure execution time": {
            "ground_truths": [
                "time.time",
                "time.perf_counter",
                "timeit.timeit"
            ],
            "ground_truths_idx": [
                4722,
                4715,
                4747
            ],
            "query": "measure execution time",
            "responses": [
                "tkinter.tix.Meter",
                "time.perf_counter",
                "sys.setswitchinterval",
                "test.support.SHORT_TIMEOUT",
                "pdb.runcall",
                "time.perf_counter_ns",
                "profile.run",
                "time.process_time",
                "profile.Profile",
                "profile.runctx"
            ],
            "responses_idx": [
                4762,
                4715,
                4304,
                4619,
                3428,
                4716,
                3521,
                4717,
                3502,
                3522
            ]
        },
        "memory usage": {
            "ground_truths": [
                "tracemalloc.start",
                "tracemalloc.get_traced_memory",
                "gc.get_stats",
                "sys.getsizeof"
            ],
            "ground_truths_idx": [
                4996,
                4992,
                1764,
                4288
            ],
            "query": "memory usage",
            "responses": [
                "sys.getallocatedblocks",
                "tracemalloc.is_tracing",
                "tracemalloc.start",
                "tracemalloc.stop",
                "errno.ENOMEM",
                "tracemalloc.get_tracemalloc_memory",
                "tracemalloc.clear_traces",
                "tracemalloc.get_traced_memory",
                "multiprocessing.shared_memory.ShareableList.count",
                "sys._debugmallocstats"
            ],
            "responses_idx": [
                4278,
                4995,
                4996,
                4997,
                1528,
                4994,
                4989,
                4992,
                2873,
                4272
            ]
        },
        "open gzip file": {
            "ground_truths": [
                "gzip.open"
            ],
            "ground_truths_idx": [
                1824
            ],
            "query": "open gzip file",
            "responses": [
                "gzip.open",
                "gzip.decompress",
                "fileinput.hook_compressed",
                "gzip.compress",
                "zipfile.ZIP_LZMA",
                "zipfile.ZIP_STORED",
                "bz2.open",
                "zipapp.get_interpreter",
                "zipfile.ZIP_BZIP2",
                "zipfile.ZIP_DEFLATED"
            ],
            "responses_idx": [
                1824,
                1826,
                1697,
                1825,
                5753,
                5750,
                229,
                5743,
                5752,
                5751
            ]
        },
        "parse command line arguments": {
            "ground_truths": [
                "argparse.ArgumentParser",
                "sys.argv"
            ],
            "ground_truths_idx": [
                7,
                4314
            ],
            "query": "parse command line arguments",
            "responses": [
                "argparse.ArgumentParser",
                "argparse.Action",
                "sys.argv",
                "getopt.getopt",
                "argparse.FileType",
                "string.Formatter.check_unused_args",
                "codeop.compile_command",
                "shlex.split",
                "inspect.BoundArguments",
                "configparser.ConfigParser.write"
            ],
            "responses_idx": [
                7,
                10,
                4314,
                1782,
                14,
                4149,
                400,
                3646,
                2057,
                503
            ]
        },
        "read json file": {
            "ground_truths": [
                "json.load",
                "json.loads"
            ],
            "ground_truths_idx": [
                2237,
                2238
            ],
            "query": "read json file",
            "responses": [
                "json.JSONDecoder.decode",
                "json.loads",
                "json.JSONDecoder.raw_decode",
                "json.JSONEncoder.encode",
                "json.load",
                "json.dump",
                "json.dumps",
                "json.JSONEncoder",
                "importlib.abc.Traversable.read_text",
                "fileinput.filename"
            ],
            "responses_idx": [
                2229,
                2238,
                2230,
                2233,
                2237,
                2235,
                2236,
                2231,
                1963,
                1689
            ]
        },
        "regex match": {
            "ground_truths": [
                "re.match",
                "re.search",
                "re.fullmatch",
                "re.compile"
            ],
            "ground_truths_idx": [
                3573,
                3572,
                3574,
                3571
            ],
            "query": "regex match",
            "responses": [
                "re.match",
                "test.support.Matcher.matches",
                "test.support.Matcher",
                "ast.MatchAs",
                "unittest.TestCase.assertRegex",
                "ast.MatchOr",
                "doctest.ELLIPSIS",
                "unittest.TestCase.assertWarnsRegex",
                "re.search",
                "difflib.get_close_matches"
            ],
            "responses_idx": [
                3573,
                4491,
                4490,
                95,
                5253,
                96,
                1280,
                5248,
                3572,
                1197
            ]
        },
        "serialize object": {
            "ground_truths": [
                "pickle.dump",
                "pickle.dumps",
                "json.dump",
                "json.dumps",
                "marshal.dump"
            ],
            "ground_truths_idx": [
                3443,
                3444,
                2235,
                2236,
                2605
            ],
            "query": "serialize object",
            "responses": [
                "json.JSONEncoder.encode",
                "sqlite3.Connection.serialize",
                "json.JSONDecoder.decode",
                "json.loads",
                "json.dump",
                "socket.SocketType",
                "dataclasses.asdict",
                "tokenize.untokenize",
                "json.load",
                "json.JSONDecoder.raw_decode"
            ],
            "responses_idx": [
                2233,
                3911,
                2229,
                2238,
                2235,
                3860,
                996,
                4934,
                2237,
                2230
            ]
        },
        "sin computation": {
            "ground_truths": [
                "math.sin",
                "cmath.sin"
            ],
            "ground_truths_idx": [
                2651,
                313
            ],
            "query": "sin computation",
            "responses": [
                "cmath.sin",
                "math.sin",
                "cmath.sinh",
                "math.asin",
                "math.sinh",
                "cmath.asinh",
                "math.asinh",
                "math.degrees",
                "math.acos",
                "cmath.asin"
            ],
            "responses_idx": [
                313,
                2651,
                319,
                2645,
                2659,
                316,
                2656,
                2653,
                2644,
                310
            ]
        },
        "suppress traceback": {
            "ground_truths": [
                "contextlib.suppress",
                "warnings.filterwarnings",
                "sys.excepthook",
                "logging.exception",
                "contextlib.redirect_stdout",
                "contextlib.redirect_stderr",
                "warnings.catch_warnings",
                "contextlib.nullcontext"
            ],
            "ground_truths_idx": [
                531,
                5457,
                4274,
                2393,
                532,
                533,
                5452,
                530
            ],
            "query": "suppress traceback",
            "responses": [
                "traceback.format_exception",
                "sys.excepthook",
                "traceback.TracebackException.format_exception_only",
                "types.TracebackType",
                "traceback.format_exception_only",
                "traceback.print_exc",
                "traceback.TracebackException.format",
                "faulthandler.cancel_dump_traceback_later",
                "traceback.print_exception",
                "traceback.TracebackException.print"
            ],
            "responses_idx": [
                4968,
                4274,
                4951,
                5123,
                4967,
                4960,
                4950,
                1676,
                4959,
                4949
            ]
        },
        "time sleep": {
            "ground_truths": [
                "time.sleep"
            ],
            "ground_truths_idx": [
                4719
            ],
            "query": "time sleep",
            "responses": [
                "threading.Timer.cancel",
                "test.support.wait_process",
                "sys.getswitchinterval",
                "threading.Event.wait",
                "sys.setswitchinterval",
                "threading.Timer",
                "test.support.sleeping_retry",
                "time.sleep",
                "os.wait",
                "timeit.Timer.autorange"
            ],
            "responses_idx": [
                4679,
                4525,
                4289,
                4677,
                4304,
                4678,
                4500,
                4719,
                3172,
                4744
            ]
        },
        "url encode string": {
            "ground_truths": [
                "urllib.parse.quote",
                "urllib.parse.urlencode"
            ],
            "ground_truths_idx": [
                5379,
                5385
            ],
            "query": "url encode string",
            "responses": [
                "urllib.parse.quote",
                "urllib.parse.unquote",
                "urllib.parse.unwrap",
                "urllib.parse.urlencode",
                "base64.urlsafe_b64decode",
                "urllib.parse.unquote_to_bytes",
                "base64.urlsafe_b64encode",
                "urllib.parse.urlsplit",
                "urllib.parse.parse_qsl",
                "urllib.parse.quote_plus"
            ],
            "responses_idx": [
                5379,
                5382,
                5378,
                5385,
                134,
                5384,
                133,
                5374,
                5372,
                5380
            ]
        }
    }
}